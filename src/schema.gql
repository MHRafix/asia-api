# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PagniationMeta {
  totalCount: Float!
  currentPage: Float!
  hasNextPage: Boolean!
  totalPages: Float!
}

type BranchSchema {
  branchName: String
  email: String
  address: String
  phone: String
}

type CountriesVisaSchema {
  country: String
  visaCategory: String
}

type AppSettings {
  _id: ID
  logo: String
  visaCategories: [String!]
  countriesVisa: [CountriesVisaSchema!]
  branches: [BranchSchema!]
}

type AppSettingsPagination {
  nodes: [AppSettings!]
  meta: PagniationMeta
}

type User {
  _id: ID
  name: String
  email: String
  role: USER_ROLE!
  password: String!
  avatar: String
  accessToken: String
  phone: String
}

enum USER_ROLE {
  ADMIN
  MODERATOR
  CUSTOMER
}

type UserPagination {
  nodes: [User!]
  meta: PagniationMeta
}

type Service {
  _id: ID
  title: String!
  thumbnail: String
  banner: String
  shortDesc: String!
  desc: String!
  preRequirements: String
  country: String
  visaCategory: String
  price: Float
  author: User
}

type ServicePagination {
  nodes: [Service!]
  meta: PagniationMeta
}

type ClientQuestionsSchema {
  qTitle: String
  qDesc: String
}

type Appointment {
  _id: ID
  name: String!
  email: String!
  phone: String!
  service: Service
  status: APPOINTMENT_STATUS!
  subService: String!
  profession: String!
  clientQuestions: [ClientQuestionsSchema!]
}

enum APPOINTMENT_STATUS {
  PENDING
  APPROVED
  CANCELED
  COMPLETED
}

type AppointmentPagination {
  nodes: [Appointment!]
  meta: PagniationMeta
}

type Attendance {
  _id: ID
  verifyBy: User
  attendee: User!
  status: Attendance_Status
  date: DateTime
  note: String
  createdAt: DateTime
  updatedAt: DateTime
}

enum Attendance_Status {
  VERIFIED
  PENDING
  NOT_PRESENT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AttendancePagination {
  nodes: [Attendance!]
  meta: PagniationMeta
}

type Blog {
  _id: ID
  author: User!
  status: Blog_Status
  date: DateTime
  title: String!
  description: String!
  country: String!
  like: Float!
  image: String
  cover: String
  visaType: Visa_Types
  createdAt: DateTime
  updatedAt: DateTime
}

enum Blog_Status {
  PUBLISHED
  PAUSED
  ARCHIVE
}

enum Visa_Types {
  TOURIST
  WORK_PERMIT
  MEDICAL
  BUSINESS
}

type BlogPagination {
  nodes: [Blog!]
  meta: PagniationMeta
}

type NewsTags {
  tags: [String!]
}

type News {
  _id: ID
  title: String!
  category: String!
  relatedInfo: NewsTags
  videoUrl: String!
  publishedAt: DateTime
}

type NewsPagination {
  nodes: [News!]
  meta: PagniationMeta
}

type PlaceInfoSchema {
  name: String
  lat: String
  lng: String
}

type RatingsAndReviews {
  rating: Float
  email: String
  message: String
}

type Travelers {
  travelerEmail: String
}

type CountDownTimer {
  bookingStart: DateTime
  bookingEnd: DateTime
}

type Transportation {
  tourBy: TOURBY!
  departureDate: DateTime
  departureTime: String
  transportName: String
  departureStation: String
  destinationStation: String
  stops: String
  journeyBreak: String
  arrivalTime: String
  arrivalDate: DateTime
}

enum TOURBY {
  BY_AIR
  BY_ROAD
  BY_RAIL
}

type TravelPackage {
  _id: ID
  packageTitle: String!
  regularPrice: Float!
  salePrice: Float
  saleStatus: SALE_STATUS!
  isPublished: Boolean!
  packageStatus: PACKAGE_STATUS!
  countDown: CountDownTimer
  thumbnail: String
  description: String
  shortDescription: String
  carouselThumbnails: [String!]
  ratingsAndReviews: [RatingsAndReviews!]
  departureFrom: PlaceInfoSchema
  destination: PlaceInfoSchema
  travelers: [Travelers!]
  transportation: [Transportation!]
  author: User
}

enum SALE_STATUS {
  FIXED
  SALE
}

enum PACKAGE_STATUS {
  UPCOMING
  FINISHED
  ALWAYS
}

type TravelPackagePagination {
  nodes: [TravelPackage!]
  meta: PagniationMeta
}

type TravelerDetailsSchema {
  adult: Float!
  child: Float!
}

type PaymentDetailsSchema {
  paymentStatus: PAYMENT_STATUS
  totalAmount: Float!
  paidFrom: String
  paymentMethod: PAYMENT_METHOD
  paymentDateTime: DateTime
}

enum PAYMENT_STATUS {
  DUE
  IN_REVIEW_PAID
  PAID
}

enum PAYMENT_METHOD {
  ONLINE
  BANK
  NONE
  BKASH
  NAGAD
  ROCKET
}

type PackageBooking {
  _id: ID
  customerDetails: User
  travelerDetails: TravelerDetailsSchema!
  packageId: TravelPackage
  transactionId: String
  bookingId: String!
  status: BOOKING_STATUS!
  paymentDetails: PaymentDetailsSchema
  createdAt: DateTime
  updatedAt: DateTime
}

enum BOOKING_STATUS {
  PENDING
  APPROVED
  CANCELED
  COMPLETED
}

type PackageBookingPagination {
  nodes: [PackageBooking!]
  meta: PagniationMeta
}

type Team {
  _id: ID
  name: String!
  post: String!
  avatar: String
  email: String!
  facebook: String
  linkedin: String
  phone: String
}

type TeamPagination {
  nodes: [Team!]
  meta: PagniationMeta
}

type VisaReq {
  _id: ID
  author: User!
  status: VisaReq_Status
  date: DateTime
  title: String!
  description: String!
  country: String!
  image: String
  cover: String
  visaType: Visa_Types
  createdAt: DateTime
  updatedAt: DateTime
}

enum VisaReq_Status {
  PUBLISHED
  PAUSED
  ARCHIVE
}

type VisaReqPagination {
  nodes: [VisaReq!]
  meta: PagniationMeta
}

type Query {
  users(input: UserListQueryDto): UserPagination!
  user(input: CommonMatchInput!): User!
  travelPackages(input: TravelPackageListQueryDto): TravelPackagePagination!
  travelPackage(input: CommonMatchInput!): TravelPackage!
  appointments(input: AppointmentListQueryDto): AppointmentPagination!
  Appointment(input: CommonMatchInput!): Appointment!
  services(input: ServiceListQueryDto): ServicePagination!
  service(input: CommonMatchInput!): Service!
  teams(input: TeamListQueryDto): TeamPagination!
  team(input: CommonMatchInput!): Team!
  allNews(input: NewsListQueryDto): NewsPagination!
  news(input: CommonMatchInput!): News!
  bookings(input: BookingPackageListQueryDto): PackageBookingPagination!
  booking(input: CommonMatchInput!): PackageBooking!
  appSettings(input: AppSettingsListQueryDto): AppSettingsPagination!
  Attendances(input: AttendanceQueryDto): AttendancePagination!
  Attendance(input: CommonMatchInput!): Attendance!
  VisaRequirements(input: VisaReqListQueryDto): VisaReqPagination!
  VisaRequirement(input: CommonMatchInput!): VisaReq!
  Blogs(input: BlogListQueryDto): BlogPagination!
  Blog(input: CommonMatchInput!): Blog!
}

input UserListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

enum SortType {
  ASC
  DESC
}

input CommonMatchInput {
  key: String!
  operator: MatchOperator!
  value: String
}

enum MatchOperator {
  eq
  ne
  gt
  gte
  lt
  lte
  in
  nin
  exists
  contains
}

enum WHERE_OPERATOR {
  and
  or
}

input TravelPackageListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input AppointmentListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input ServiceListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input TeamListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input NewsListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input BookingPackageListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input AppSettingsListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input AttendanceQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input VisaReqListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

input BlogListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

type Mutation {
  signUp(input: CreateUserInput!): User!
  signIn(input: CreateUserInput!): User!
  adminSignIn(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  removeUser(input: CommonMatchInput!): Boolean
  bulkRemoveUser(uIds: [String!]!): Boolean
  createTravelPackage(input: CreateTravelPackageInput!): TravelPackage!
  updateTravelPackage(input: UpdateTravelPackageInput!): TravelPackage!
  removeTravelPackage(input: CommonMatchInput!): Boolean
  createAppointment(input: CreateAppointmentInput!): Appointment!
  updateAppointment(input: UpdateAppointmentInput!): Appointment!
  removeAppointment(input: CommonMatchInput!): Boolean
  bulkRemoveAppointment(uIds: [String!]!): Boolean
  createService(input: CreateServiceInput!): Service!
  updateService(input: UpdateServiceInput!): Service!
  removeService(input: CommonMatchInput!): Boolean
  createTeam(input: CreateTeamInput!): Team!
  updateTeam(input: UpdateTeamInput!): Team!
  removeTeam(input: CommonMatchInput!): Boolean
  bulkRemoveTeam(uIds: [String!]!): Boolean
  createNews(input: CreateNewsInput!): News!
  updateNews(input: UpdateNewsInput!): News!
  removeNews(input: CommonMatchInput!): Boolean
  createBooking(input: CreatePackageBookingInput!): PackageBooking!
  updateBooking(input: UpdatePackageBookingInput!): PackageBooking!
  removeBooking(input: CommonMatchInput!): Boolean
  bulkRemoveBooking(uIds: [String!]!): Boolean
  createAppSetting(input: CreateAppSettingInput!): AppSettings!
  updateAppSettings(input: UpdateAppSettingInput!): AppSettings!
  createAttendance(input: CreateAttendanceInput!): Boolean!
  updateAttendance(input: UpdateAttendanceInput!): Boolean!
  removeAttendance(input: CommonMatchInput!): Boolean
  createVisaReq(input: CreateVisaRequirementInput!): Boolean!
  updateVisaReq(input: UpdateVisaRequirementInput!): Boolean!
  removeVisaReq(input: CommonMatchInput!): Boolean
  createBlog(input: CreateBlogInput!): Boolean!
  updateBlog(input: UpdateBlogInput!): Boolean!
  removeBlog(input: CommonMatchInput!): Boolean
}

input CreateUserInput {
  _id: ID

  """
  User name
  """
  name: String

  """
  User email
  """
  email: String!

  """
  User role
  """
  role: USER_ROLE

  """
  User password
  """
  password: String!

  """
  User avatar
  """
  avatar: String
  accessToken: String
  phone: String
}

input UpdateUserInput {
  _id: String

  """
  User name
  """
  name: String

  """
  User email
  """
  email: String

  """
  User role
  """
  role: USER_ROLE

  """
  User password
  """
  password: String

  """
  User avatar
  """
  avatar: String
  accessToken: String
  phone: String
}

input CreateTravelPackageInput {
  _id: ID
  packageTitle: String!
  regularPrice: Float!
  salePrice: Float
  saleStatus: SALE_STATUS = FIXED
  isPublished: Boolean!
  countDown: CountDownTimerInput
  thumbnail: String
  departureFrom: PlaceInfoInput
  destination: PlaceInfoInput
  packageStatus: PACKAGE_STATUS = UPCOMING
  description: String
  shortDescription: String
  carouselThumbnails: [String!]
  ratingsAndReviews: [RatingsAndReviewsInput!]
  travelers: [TravelersInput!]
  transportation: [TransportationInput!]
  author: String
}

input CountDownTimerInput {
  bookingStart: DateTime
  bookingEnd: DateTime
}

input PlaceInfoInput {
  name: String
  lat: String
  lng: String
}

input RatingsAndReviewsInput {
  rating: Float
  email: String
  message: String
}

input TravelersInput {
  travelerEmail: String
}

input TransportationInput {
  tourBy: TOURBY! = BY_ROAD
  departureStation: String
  destinationStation: String
  departureDate: DateTime
  departureTime: String
  transportName: String
  stops: String
  journeyBreak: String
  arrivalTime: String
  arrivalDate: DateTime
}

input UpdateTravelPackageInput {
  _id: String
  packageTitle: String
  regularPrice: Float
  salePrice: Float
  saleStatus: SALE_STATUS = FIXED
  isPublished: Boolean
  countDown: CountDownTimerInput
  thumbnail: String
  departureFrom: PlaceInfoInput
  destination: PlaceInfoInput
  packageStatus: PACKAGE_STATUS = UPCOMING
  description: String
  shortDescription: String
  carouselThumbnails: [String!]
  ratingsAndReviews: [RatingsAndReviewsInput!]
  travelers: [TravelersInput!]
  transportation: [TransportationInput!]
  author: String
}

input CreateAppointmentInput {
  _id: ID
  name: String!
  email: String!
  phone: String!
  author: String
  status: APPOINTMENT_STATUS! = PENDING
  subService: String!
  profession: String!
  clientQuestions: [ClientQuestionsInput!]
}

input ClientQuestionsInput {
  qTitle: String
  qDesc: String
}

input UpdateAppointmentInput {
  _id: String
  name: String
  email: String
  phone: String
  author: String
  status: APPOINTMENT_STATUS = PENDING
  subService: String
  profession: String
  clientQuestions: [ClientQuestionsInput!]
}

input CreateServiceInput {
  _id: ID
  title: String!
  thumbnail: String
  banner: String
  shortDesc: String
  desc: String!
  country: String
  visaCategory: String
  preRequirements: String
  price: Float
  author: String
}

input UpdateServiceInput {
  _id: String!
  title: String
  thumbnail: String
  banner: String
  shortDesc: String
  desc: String
  country: String
  visaCategory: String
  preRequirements: String
  price: Float
  author: String
}

input CreateTeamInput {
  _id: ID
  name: String!
  post: String!
  avatar: String!
  email: String!
  facebook: String
  linkedin: String
  phone: String
}

input UpdateTeamInput {
  _id: String!
  name: String
  post: String
  avatar: String
  email: String
  facebook: String
  linkedin: String
  phone: String
}

input CreateNewsInput {
  _id: ID
  title: String!
  category: String!
  relatedInfo: NewsTagsInput
  videoUrl: String!
  publishedAt: DateTime
}

input NewsTagsInput {
  tags: [String!]
}

input UpdateNewsInput {
  _id: String!
  title: String
  category: String
  relatedInfo: NewsTagsInput
  videoUrl: String
  publishedAt: DateTime
}

input CreatePackageBookingInput {
  _id: ID
  customerDetails: String
  travelerDetails: TravelerDetailsInput!
  packageId: String
  transactionId: String
  bookingId: String!
  createdAt: DateTime
  status: BOOKING_STATUS! = PENDING
  paymentDetails: PaymentDetailsInput
}

input TravelerDetailsInput {
  adult: Float!
  child: Float!
}

input PaymentDetailsInput {
  paymentStatus: PAYMENT_STATUS! = DUE
  totalAmount: Float!
  paymentMethod: PAYMENT_METHOD = NONE
  paidFrom: String
  paymentDateTime: DateTime
}

input UpdatePackageBookingInput {
  _id: ID
  customerDetails: String
  travelerDetails: TravelerDetailsInput
  packageId: String
  transactionId: String
  bookingId: String
  createdAt: DateTime
  status: BOOKING_STATUS = PENDING
  paymentDetails: PaymentDetailsInput
}

input CreateAppSettingInput {
  _id: ID
  logo: String
  visaCategories: [String!]
  countriesVisa: [CountriesVisaInput!]
  branches: [BranchInput!]
}

input CountriesVisaInput {
  country: String
  visaCategory: String
}

input BranchInput {
  branchName: String
  email: String
  address: String
  phone: String
}

input UpdateAppSettingInput {
  _id: String!
  logo: String
  visaCategories: [String!]
  countriesVisa: [CountriesVisaInput!]
  branches: [BranchInput!]
}

input CreateAttendanceInput {
  _id: ID
  status: Attendance_Status = PENDING
  attendee: String!
  verifyBy: String
  note: String
  date: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

input UpdateAttendanceInput {
  _id: String
  status: Attendance_Status = PENDING
  attendee: String
  verifyBy: String
  note: String
  date: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

input CreateVisaRequirementInput {
  _id: ID
  status: VisaReq_Status = PUBLISHED
  author: String!
  title: String!
  description: String!
  date: DateTime
  country: String!
  image: String
  cover: String
  visaType: Visa_Types2 = TOURIST
  createdAt: DateTime
  updatedAt: DateTime
}

enum Visa_Types2 {
  TOURIST
  WORK_PERMIT
  MEDICAL
  BUSINESS
}

input UpdateVisaRequirementInput {
  _id: String
  status: VisaReq_Status = PUBLISHED
  author: String
  title: String
  description: String
  date: DateTime
  country: String
  image: String
  cover: String
  visaType: Visa_Types2 = TOURIST
  createdAt: DateTime
  updatedAt: DateTime
}

input CreateBlogInput {
  _id: ID
  status: Blog_Status = PUBLISHED
  author: String!
  title: String!
  description: String!
  date: DateTime
  country: String!
  like: Float!
  image: String
  cover: String
  visaType: Visa_Types = TOURIST
  createdAt: DateTime
  updatedAt: DateTime
}

input UpdateBlogInput {
  _id: String
  status: Blog_Status = PUBLISHED
  author: String
  title: String
  description: String
  date: DateTime
  country: String
  like: Float
  image: String
  cover: String
  visaType: Visa_Types = TOURIST
  createdAt: DateTime
  updatedAt: DateTime
}
